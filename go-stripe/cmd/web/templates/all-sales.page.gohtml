{{template "base" .}}

{{define "title"}}
    All Sales
{{end}}

{{define "content"}}
    <h2 class="mt-5">All Sales</h2>
    <table id="sales-table" class="table table-striped">
        <thead>
            <tr>
                <th>Transaction</th>
                <th>Customer</th>
                <th>Procuct</th>
                <th>Amount</th>
                <th>Status</th>
            </tr>
            <tbody></tbody>
        </thead>
    </table>

    <nav aria-label="Page navigation">
        <ul id="paginator" class="pagination">
        </ul>
    </nav>
{{end}}

{{define "js"}}
<script src="/static/js/paginator.js"></script>
<script>
    let currentPage = 1;
    let pageSize = 5;
    let token = localStorage.getItem("token");
    let tbody = document.getElementById("sales-table").getElementsByTagName("tbody")[0];

    function updateTable(ps, cp) {
        let body = {
           page_size: parseInt(ps, 10),
           current_page: parseInt(cp, 10), 
        };

        const requestOptions = {
            method: "post",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`,
            },
            body: JSON.stringify(body),
        };

        fetch("{{.API}}/api/admin/all-sales", requestOptions)
            .then(response => response.json())
            .then(function(data) {
                tbody.innerHTML = "";
                if (data.page_data && data.page_data.length > 0) {
                    data.page_data.forEach(function(i) {
                        let newRow = tbody.insertRow();
                        let newCell = newRow.insertCell();
                        newCell.innerHTML = `<a href="/admin/sales/${i.id}">Order ${i.id}</a>`;

                        newCell = newRow.insertCell();
                        let item = document.createTextNode(`${i.customer.last_name}, ${i.customer.first_name}`);
                        newCell.appendChild(item);

                        newCell = newRow.insertCell();
                        item = document.createTextNode(i.widget.name);
                        newCell.appendChild(item)

                        newCell = newRow.insertCell();
                        item = document.createTextNode(formatCurrency(i.transaction.amount));
                        newCell.appendChild(item)

                        newCell = newRow.insertCell();
                        if (i.status_id != 1) {
                            newCell.innerHTML = `<span class="badge bg-danger">Refunded</span>`;
                        } else {
                            newCell.innerHTML = `<span class="badge bg-success">Charged</span>`;
                        }
                    });
                    paginator(data.last_page, data.current_page);
                } else {
                    let newRow = tbody.insertRow();
                    let newCell = newRow.insertCell();
                    newCell.setAttribute("colspan", "5");
                    newCell.classList.add("text-center");
                    newCell.innerText= "No data available";
                }
            });
    }

    document.addEventListener("DOMContentLoaded", function() {
        updateTable(pageSize, currentPage);
    });

    function formatCurrency(amount) {
        let c = parseFloat(amount) / 100.0;
        return c.toLocaleString("en-US", {
            style: "currency",
            currency: "USD",
        });
    }
</script>
{{end}}